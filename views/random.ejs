<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Code Display</title>

    <!-- Include Highlight.js CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/github-dark.min.css">

    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
        }

        pre {
            border: 1px solid #ddd;
            border-radius: 5px;
            background-color: #f6f5b2;
            color: #f6f5b2;
            padding: 15px;
            overflow-x: auto;
            font-size: 1rem;
        }
    </style>
</head>

<body>
    <!-- Code Block -->
    <pre><code class="javascript">
const startDraw = async (req, res) => {
const date = new Date();
const time = date.toLocaleTimeString();

try {
const gameInfo = await mysSQLClient.hgetall("game_info");
let drawGap = parseInt(gameInfo.drawInterval, 10) * 1000;
if (gameInfo.status === "done") {
return res.status(400).json({ message: "Game Finished" });
}

if (drawInterval) {
return res.status(400).json({ message: "Draw is already in progress!" });
}

// Generate unique random numbers for the draw

const generateUniqueNumbers = (total) => {
const numbers = Array.from({ length: total }, (_, i) => i + 1); // [1, 2, ..., 90]
for (let i = numbers.length - 1; i > 0; i--) {
const j = Math.floor(Math.random() * (i + 1));
[numbers[i], numbers[j]] = [numbers[j], numbers[i]]; // Shuffle numbers
}
return numbers;
};

const drawNumbers = generateUniqueNumbers(90); // Randomized array of 1 to 90

// Start the draw process
let drawIndex = 0;
const drawNextNumber = async () => {
if (drawIndex >= drawNumbers.length) {
return;
}

const newNumber = drawNumbers[drawIndex];
drawnNumbers.push(newNumber);
const winners = await validateWinners(drawnNumbers);

drawIndex++;
};

setTimeout(() => {
drawNextNumber();
drawInterval = setInterval(drawNextNumber, drawGap);
}, 10000);

res.status(200).json({ message: "Draw started successfully!" });
} catch (error) {
console.error("Error starting draw:", error);
}
};

  </code></pre>

    <!-- Include Highlight.js JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script>
    <script>
        // Initialize Highlight.js
        hljs.highlightAll();
    </script>
</body>

</html>